{"config":{"lang":["de","en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to knowledge-base","text":""},{"location":"pest/","title":"Pest","text":"","tags":["commandos","pest"]},{"location":"pest/#kommandos","title":"Kommandos","text":"","tags":["commandos","pest"]},{"location":"pest/#pest-composer-testpest-coverage","title":"pest: composer test:pest-coverage","text":"<p>Siehe hier: pest.de</p>","tags":["commandos","pest"]},{"location":"pest/#pest-datei-testen","title":"pest: Datei Testen","text":"<pre><code>composer test:pest-coverage Tests\\Pfad\\Zur\\Datei\\DateiOhneEndung\n</code></pre>","tags":["commandos","pest"]},{"location":"php/","title":"php","text":"","tags":["php","desctruct","try-catch"]},{"location":"php/#try-catch-finally","title":"Try catch finally","text":"<p>Beim Ausf\u00fchren unserer Skripte treten Fehler und Ausnahmen auf, das geh\u00f6rt zur Natur der Sache. Jedoch ist es n\u00f6tig, Fehler voneinander zu unterscheiden und entsprechend zu behandeln. Daf\u00fcr k\u00f6nnen wir in PHP die Schl\u00fcsselw\u00f6rter try, catch und finally verwenden.</p>","tags":["php","desctruct","try-catch"]},{"location":"php/#1-ein-einfacher-php-try-catch-block","title":"1. Ein einfacher PHP try catch Block","text":"<p>Fehler und Ausnahmen k\u00f6nnen wir behandeln, wenn der Code, der diese produziert, in einem try Block geschrieben wird. Mit dem Schl\u00fcsselwort catch k\u00f6nnen wir diese dann abfangen.</p> <pre><code>&lt;?php\ntry {\n# Tu was\n} catch (Exception $e) {\n# K\u00fcmmere dich um Ausnahmen\n}\n</code></pre>","tags":["php","desctruct","try-catch"]},{"location":"php/#11-fehler-und-ausnahmen","title":"1.1 Fehler und Ausnahmen","text":"<p>Ein Fehler tritt zum Beispiel auf, wenn du eine Funktion aufrufst, die nie definiert wurde.</p> <pre><code>&lt;?php undefinierte_funktion(); ?&gt;\n</code></pre> <p>Output:</p> <pre><code>Fatal error: Uncaught Error: Call to undefined function undefinierte\\_funktion() in C:\\\\xampp\\\\htdocs\\\\codecitrus\\\\try\\_catch.php:1 Stack trace: #0 {main} thrown in C:\\\\xampp\\\\htdocs\\\\codecitrus\\\\try\\_catch.php on line 1\n</code></pre> <p>Um Code zu definieren, der nur ausgef\u00fchrt wird, wenn ein Fehler (Error) auftritt, kannst du try und catch anwenden.</p> <pre><code>&lt;?php\ntry {\nundefinierte_funktion();\necho 'Es ist kein Fehler aufgetreten';\n} catch (Error $e) {\necho 'Ein Fehler ist aufgetreten' . '&lt;br&gt;';\necho $e-&gt;getMessage();\n}\n</code></pre> <p>Output:</p> <pre><code>Ein Fehler ist aufgetreten\nCall to undefined function undefinierte_funktion()\n</code></pre> <p>Wenn stattdessen eine Ausnahme (Exception) auftritt, musst du das im catch Block so angeben, um diese zu behandeln.</p> <pre><code>&lt;?php\nfunction ausnahme() {\nthrow new Exception('Eine Ausnahme ist aufgetreten');\n}\ntry {\nausnahme();\n} catch (Exception $e) {\necho $e-&gt;getMessage();\n}\n</code></pre> <p>Output:</p> <pre><code>Eine Ausnahme ist aufgetreten\n</code></pre>","tags":["php","desctruct","try-catch"]},{"location":"php/#12-beide-abfangen-mit-throwable","title":"1.2 Beide abfangen mit Throwable","text":"<p>Die vorigen Erkl\u00e4rungen haben sowohl Exceptions als auch Errors behandelt. Um beide abzufangen, k\u00f6nntest du zwei catch Bl\u00f6cke hintereinander definieren.</p> <pre><code>&lt;?php\ntry {\nundefinierte_funktion();\n} catch (Exception $e) {\necho 'Exception';\n} catch (Error $e) {\necho 'Error';\n}\n</code></pre> <p>Output:</p> <pre><code>Error\n</code></pre> <p>Eine weitere M\u00f6glichkeit ist, Throwable mit catch abzufangen. Throwable ist das Interface, das jede PHP-Klasse implementieren muss, soll sie mit throw aufgerufen werden. F\u00fcr das n\u00e4chste Beispiel wird die Funktion ausnahme, die wir vorhin definiert haben, erneut genutzt.</p> <pre><code>&lt;?php\ntry {\nundefinierte_funktion();\n} catch (Throwable $t) {\necho 'Gotta catch \\'em all!';\n}\n// Gotta catch 'em all!\ntry {\nausnahme();\n} catch (Throwable $t) {\necho 'Schnapp sie dir alle!';\n}\n// Schnapp sie dir alle!\n</code></pre>","tags":["php","desctruct","try-catch"]},{"location":"php/#2-finally-um-den-block-zu-beenden","title":"2. finally um den Block zu beenden","text":"<p>Mit dem Schl\u00fcsselwort finally kannst du deinem Block weiteren Code hinzuf\u00fcgen. finally erm\u00f6glicht es dir, Code zu schreiben, der ausgef\u00fchrt wird egal ob ein Fehler auftritt oder nicht.</p> <pre><code>&lt;?php\nfunction finally_beispiel_1() {\ntry {\nthrow new Exception();\n} catch (Exception $e) {\necho \"Exception!\" . '&lt;br&gt;';\n} finally {\necho \"Finally!\";\n}\n}\nfinally_beispiel_1();\n</code></pre> <p>Output:</p> <pre><code>Exception!\nFinally!\n</code></pre>","tags":["php","desctruct","try-catch"]},{"location":"php/#21-vorsicht-mit-return","title":"2.1 Vorsicht mit return!","text":"<p>return kann bei Verwendung von finally zu unerwarteten Ergebnissen f\u00fchren.</p> <pre><code>&lt;?php\nfunction finally_beispiel_2() {\ntry {\nthrow new Exception();\nreturn 1;\n} catch (Exception $e) {\necho \"Exception!\" . '&lt;br&gt;';\nreturn 2;\n} finally {\necho \"Finally!\" . '&lt;br&gt;';\nreturn 3;\n}\n}\necho finally_beispiel_2();\n</code></pre> <p>Output:</p> <pre><code>Exception!\nFinally!\n3\n</code></pre> <p>Im vorigen Beispiel wurde der Wert von return aus dem catch Block einfach mit dem aus finally \u00fcberschrieben. Dasselbe w\u00fcrde passieren, wenn return bereits einen Wert aus try empfangen h\u00e4tte.</p>","tags":["php","desctruct","try-catch"]},{"location":"php/#3-fazit-php-try-catch","title":"3. Fazit \u2013 PHP try &amp; catch","text":"<p>Mit try, catch und finally stellt uns PHP m\u00e4chtige Werkzeuge zur Verf\u00fcgung, um Ausnahmef\u00e4lle und Fehler zu behandeln. Damit k\u00f6nnen wir Logs erstellen, alternative Routinen ausf\u00fchren oder einfach unser Skript stoppen. Vorsicht ist jedoch geboten, wenn wir unseren Code in solchen Bl\u00f6cken mit return verwenden, da dies zu unerwarteten Ergebnissen f\u00fchren kann.</p> <ul> <li>Original Artikel von Patrick</li> </ul>","tags":["php","desctruct","try-catch"]},{"location":"php/#when-does-php-call-__destruct","title":"When does PHP call __destruct()?","text":"<p>In PHP,</p> <p><code>__construct()</code> is called while creating an object and <code>__destruct()</code> is called while the object is being removed from memory. Using this knowledge, we can create more fluent APIs as demonstrated by Freek Van der Herten in this short video.</p> <p>Now let's see when PHP calls</p> <p><code>__destruct()</code> exactly.</p> <p>An object is removed from memory if you explicitly remove it:</p> <pre><code>&lt;?php\n$object = new Object();\nunset($object); // __destruct will be called immediately.\n$object = null; // __destruct will be called immediately.\n</code></pre> <p>It's also called when the scope where the object live is about to be terminated, for example at the end of a controller method:</p> <pre><code>&lt;?php\nfunction store(Request $request)\n{\n$object = new Object();\nUser::create(...);\n// __destruct will be called here.\nreturn view('welcome');\n}\n</code></pre> <p>Even if we're within a long running process, queued job for example, __destruct will be called before the end of the handle method:</p> <pre><code>&lt;?php\nfunction handle()\n{\n$object = new Object();\nUser::create(...);\n// __destruct will be called here.\n}\n</code></pre> <p>It'll also be called when the script is being terminated:</p> <pre><code>&lt;?php\nfunction handle()\n{\n$object = new Object();\nUser::create(...);\n// __destruct will be called here.\nexit(1);\n}\n</code></pre> <ul> <li>Original article by Mohamed Said</li> </ul>","tags":["php","desctruct","try-catch"]},{"location":"phpstan/","title":"phpstan","text":"","tags":["phpstan","commandos"]},{"location":"phpstan/#kommandos","title":"Kommandos","text":"","tags":["phpstan","commandos"]},{"location":"phpstan/#phpstan-der-tagliche-wahnsinn","title":"phpstan: Der t\u00e4gliche Wahnsinn","text":"<pre><code>vendor/bin/phpstan clear-result-cache --memory-limit=5G\nvendor/bin/phpstan analyse --ansi --memory-limit=5G\nvendor/bin/phpstan --generate-baseline --memory-limit=5G\n</code></pre>","tags":["phpstan","commandos"]},{"location":"shortcuts/","title":"Shortcuts","text":""},{"location":"shortcuts/#visual-studio-code","title":"Visual Studio Code","text":"Shortcut Beschreibung Cmd (\u2318) + Shift (\u21e7) + c \u00d6ffnet Consolen-IDE Iterm und springt direkt zum Projekt Cmd (\u2318) + Shift (\u21e7) + e \u00d6ffnet den Workspace-Explorer Cmd (\u2318) + Rechts Spring zum Ende der Zeile Cmd (\u2318) + Links Spring zum Anfang der Zeile Cmd (\u2318) + Oben Springt zur ersten Zeile Cmd (\u2318) + Unten Springt zur letzten Zeile Cmd (\u2318) + Enter Zeile nach unten einf\u00fcgen Cmd (\u2318) + L Komplette Zeile markieren Cmd (\u2318) + D Wort ausw\u00e4hlen - Wiederholen Sie die Auswahl anderer Vorkommen Cmd (\u2318) + F Wort markieren und es wird im Suchfenster angezeigt, Suchfenster wird selektiert Cmd (\u2318) + E Wort markieren und es wird im Suchfenster angezeigt, Markierung bleibt auf das Wor Cmd (\u2318) + A Alles selektieren Cmd (\u2318) + C Markierung kopieren Cmd (\u2318) + X Markierung ausschneiden Cmd (\u2318) + V Kopierten Zwischenspeicher einf\u00fcgen Shift (\u21e7) + ESC Suchfenster schlie\u00dfen Option (\u2325) + Oben Zeile nach oben verschieben Option (\u2325) + Unten Zeile nach unten verschieben Option (\u2325) + Shift (\u21e7) + oben Zeile nach oben kopieren Option (\u2325) + Shift (\u21e7) + unten Zeile nach unten kopieren Cmd (\u2318) + Option (\u2325) + Shift (\u21e7) + Oben Zeile nach oben markieren und cursor platzieren Cmd (\u2318) + Option (\u2325) + Shift (\u21e7) + rechts Zeile nach rechts markieren und cursor platzieren Cmd (\u2318) + Option (\u2325) + Shift (\u21e7) + unten Zeile nach unten markieren und cursor platzieren Cmd (\u2318) + Option (\u2325) + Shift (\u21e7) + links Zeile nach links markieren und cursor platzieren Option (\u2325) + Rechts Cursor zum Wort-Ende Option (\u2325) + Shift (\u21e7) + Rechts Markiert das n\u00e4chste Wort nach rechts Option (\u2325) + Links Cursor zum Wort-Anfang Option (\u2325) + Shift (\u21e7) + Rechts Markiert das n\u00e4chste Wort nach links Ctrl (\u2303) + A Zeilen Anfang Ctrl (\u2303) + E Zeilen Ende Ctrl (\u2303) + Shift (\u21e7) + A Vom Cursor alles bis zum Anfang markieren Ctrl (\u2303) + Shift (\u21e7) + E Vom Cursor alles bis zum Ende markieren Ctrl (\u2303) + Tab Zwischen den offenen Dateien wechseln Ctrl (\u2303) + D L\u00f6schen nach Rechts Ctrl (\u2303) + H L\u00f6schen nach Links Tab Markierten Text ein Tab Schritt nach rechts verschieben Cmd (\u2318) + Tab Markierten Text ein Tab Schritt nach lins verschieben Option (\u2325) + H Github History anzeigen Option (\u2325) + Enter \u00d6ffnet Workbench View Cmd (\u2318) + DEL Vom Curosr alles nach links l\u00f6schen Cmd (\u2318) + Backspace Vom Curosr alles nach rechts l\u00f6schen Cmd (\u2318) + Ctrl (\u2303) + DEL Vom Curosr das n\u00e4chste WortPaar nach links l\u00f6schen Cmd (\u2318) + Ctrl (\u2303) + Backspace Vom Curosr das n\u00e4chste WortPaar nach rechts l\u00f6schen Cmd (\u2318) + K + C Zeile auskommentieren Cmd (\u2318) + K + U Zeile einkommentieren Cmd (\u2318) + Shift (\u21e7) + A Toggle Block-Kommentare / ein- und auskommentieren Cmd (\u2318)o + Shift (\u21e7) + / Toggle Line-Kommentare / ein- und auskommentieren Cmd (\u2318) + Shift (\u21e7) + K Zeile l\u00f6schen Cmd (\u2318) + Option (\u2325) + Ctrl (\u2303) + / Gehe zum Klammerende"},{"location":"shortcuts/#mac","title":"Mac","text":""},{"location":"shortcuts/#ausschneiden-kopieren-einsetzen-und-andere-haufig-verwendete-kurzbefehle","title":"Ausschneiden, Kopieren, Einsetzen und andere h\u00e4ufig verwendete Kurzbefehle","text":"Shortcut Beschreibung Cmd (\u2318) + X Ausgew\u00e4hltes Objekt aus dem Originaltext l\u00f6schen und in die Zwischenablage kopieren. Cmd (\u2318) + C Ausgew\u00e4hltes Objekt in die Zwischenablage kopieren. Dies funktioniert auch mit Dateien im Finder. Cmd (\u2318) + V Den Inhalt der Zwischenablage in das aktuelle Dokument oder die aktuelle App einf\u00fcgen. Dies funktioniert auch mit Dateien im Finder. Cmd (\u2318) + Z Den vorherigen Befehl widerrufen. Du kannst anschlie\u00dfend zum Wiederholen den Tastaturkurzbefehl Shift (\u21e7)-Cmd (\u2318) +Z dr\u00fccken, um den Widerrufen-Befehl umzukehren. In manchen Apps kannst du mehrere Befehle widerrufen und wiederholen. Cmd (\u2318) + A Alle Objekte ausw\u00e4hlen. Cmd (\u2318) + F Elemente in einem Dokument suchen oder ein Suchfenster \u00f6ffnen. Cmd (\u2318) + G Das n\u00e4chste Auftreten des gefundenen Objekts suchen (vorw\u00e4rts suchen). Um das vorherige Auftreten zu suchen (r\u00fcckw\u00e4rts suchen), dr\u00fccke Shift (\u21e7)-Cmd (\u2318) +G. Cmd (\u2318) + H Die Fenster der vordersten App ausblenden. Um nur die vorderste App anzuzeigen und alle anderen Apps auszublenden, dr\u00fccke Option (\u2325)-Cmd (\u2318) +H. Cmd (\u2318) + M Das vorderste Fenster im Dock ablegen. Um alle Fenster der vordersten App im Dock abzulegen, dr\u00fccke Option (\u2325)-Cmd (\u2318) +M. Cmd (\u2318) + O Das ausgew\u00e4hlte Objekt oder ein Dialogfenster zur Auswahl einer Datei \u00f6ffnen. Cmd (\u2318) + P Das aktuelle Dokument drucken. Cmd (\u2318) + S Das aktuelle Dokument sichern. Cmd (\u2318) + T Einen neuen Tab \u00f6ffnen. Cmd (\u2318) + W Das vorderste Fenster schlie\u00dfen. Um alle Fenster der App zu schlie\u00dfen, dr\u00fccke Option (\u2325)-Cmd (\u2318) +W. Option (\u2325) + Cmd (\u2318) + Esc Beenden einer App erzwingen. Cmd (\u2318) + Leertaste Das Spotlight-Suchfeld\u00a0ein- oder ausblenden. Um eine Spotlight-Suche aus einem Finder-Fenster durchzuf\u00fchren, dr\u00fccke Cmd (\u2318) +Option (\u2325)-Leertaste. (Wenn du\u00a0mehrere Eingabequellen verwendest, um in anderen Sprachen zu schreiben, \u00e4ndern diese Kurzbefehle die Eingabequelle, anstatt Spotlight anzuzeigen. Hier erf\u00e4hrst du, wie du\u00a0einen nicht eindeutigen Tastaturkurzbefehl \u00e4nderst Ctrl (\u2303) + Cmd (\u2318) + Leertaste Die Zeichen\u00fcbersicht einblenden, in der du w\u00e4hlen kannst. Ctrl (\u2303) + Cmd (\u2318) + F App im Vollbildmodus verwenden, falls die App dies unterst\u00fctzt. Leertaste verwenden, um eine Vorschau des ausgew\u00e4hlten Objekts zu sehen. Cmd (\u2318) + Tab Unter den ge\u00f6ffneten Apps zur zuletzt verwendeten wechseln. Cmd (\u2318) + Abw\u00e4rtsakzent (`) Zwischen den Fenstern der App wechseln, die du gerade verwendest. (Das Zeichen auf der zweiten Taste ist je nach Tastatur unterschiedlich. Die Taste befindet sich in der Regel \u00fcber der Tab und links von der Zahl\u00a01.) Shift (\u21e7)-Cmd (\u2318) + 5 In macOS\u00a0Mojave ein Bildschirmfoto oder eine Bildschirmaufnahme erstellen. Verwende bei \u00e4lteren macOS-Versionen Shift (\u21e7)-Cmd (\u2318) +3 oder Shift (\u21e7)-Cmd (\u2318) +4, um Bildschirmfotos aufzunehmen. Shift (\u21e7)-Cmd (\u2318) + N Einen neuen Ordner im Finder anlegen. Cmd (\u2318) + Komma\u00a0(,) Einstellungen f\u00fcr die vorderste App \u00f6ffnen."},{"location":"shortcuts/#kurzbefehle-fur-ruhezustand-abmelden-und-ausschalten","title":"Kurzbefehle f\u00fcr Ruhezustand, Abmelden und Ausschalten","text":"<p>M\u00f6glicherweise musst du einige dieser Kurzbefehle etwas l\u00e4nger gedr\u00fcckt halten als andere. So kannst du vermeiden, sie versehentlich zu verwenden.</p> Shortcut Beschreibung Ein-/Ausschalter Dr\u00fccken, um deinen Mac einzuschalten oder den Ruhezustand zu beenden.\u00a0Halte den Schalter 1,5\u00a0Sekunden lang gedr\u00fcckt, um deinen Mac in den Ruhezustand zu versetzen.* Halte den Schalter l\u00e4nger gedr\u00fcckt, um das Ausschalten des Mac zu erzwingen. Option (\u2325)-Cmd (\u2318) +Ein-/Ausschalter* oder\u00a0Option (\u2325)-Cmd (\u2318) +Medienauswurftaste Ruhezustand des Mac aktivieren. Ctrl (\u2303) + Shift (\u21e7)-Ein-/Ausschalter*\u00a0oder\u00a0Ctrl (\u2303)-Shift (\u21e7)-Medienauswurftaste Displays in Ruhezustand versetzen. Ctrl (\u2303) + Ein-/Ausschalter*\u00a0oder\u00a0Ctrl (\u2303)-Medienauswurftaste Ein Dialogfenster anzeigen, das dir die Wahlm\u00f6glichkeiten \"Neustart\", \"Ruhezustand\" oder Ausschalten\" anbietet. Ctrl (\u2303) + Cmd (\u2318) +Ein-/Ausschalter *\u00a0Neustart des Mac erzwingen, ohne zum Sichern von ge\u00f6ffneten oder nicht gesicherten Dokumenten aufzufordern. Ctrl (\u2303) + Cmd (\u2318) +Medienauswurftaste Alle Apps beenden und den Mac anschlie\u00dfend neu starten. Falls ge\u00f6ffnete Dokumente nicht gesicherte \u00c4nderungen enthalten, wirst du gefragt, ob du sie sichern m\u00f6chtest. Ctrl (\u2303) + Option (\u2325)-Cmd (\u2318) +Ein-/Ausschalter* oder\u00a0Ctrl (\u2303)-Option (\u2325)-Cmd (\u2318) +Medienauswurftaste Alle Apps beenden und den Mac anschlie\u00dfend ausschalten. Falls ge\u00f6ffnete Dokumente nicht gesicherte \u00c4nderungen enthalten, wirst du gefragt, ob du sie sichern m\u00f6chtest. Ctrl (\u2303) + Cmd (\u2318) +Q Den Bildschirm sofort sperren. Shift (\u21e7)-Cmd (\u2318) +Q Von deinem macOS-Benutzeraccount abmelden. Du wirst zur Best\u00e4tigung des Vorgangs aufgefordert. Um dich sofort ohne Best\u00e4tigung abzumelden, dr\u00fccke Option (\u2325)-Shift (\u21e7)-Cmd (\u2318) +Q. <p>* Gilt nicht f\u00fcr den\u00a0Touch\u00a0ID-Sensor.</p>"},{"location":"shortcuts/#finder-und-systemkurzbefehle","title":"Finder- und Systemkurzbefehle","text":"Shortcut Beschreibung Cmd (\u2318) +D Ausgew\u00e4hlte Dateien duplizieren. Cmd (\u2318) +E Ausgew\u00e4hltes Laufwerk oder Volume auswerfen. Cmd (\u2318) +F Eine Spotlight-Suche im Finder-Fenster starten. Cmd (\u2318) +I Fenster \"Informationen\" f\u00fcr eine markierte Datei anzeigen. Cmd (\u2318) +R (1)\u00a0Wenn im Finder ein Alias ausgew\u00e4hlt ist urspr\u00fcngliche Datei f\u00fcr ausgew\u00e4hlten Alias anzeigen. (2)\u00a0In einigen Apps wie Kalender oder Safari die Seite aktualisieren oder neu laden. (3)\u00a0Unter Softwareupdate\u00a0nochmals nach Softwareupdates suchen. Shift (\u21e7)-Cmd (\u2318) + C Fenster \"Computer\" \u00f6ffnen. Shift (\u21e7)-Cmd (\u2318) + D Ordner \"Schreibtisch\" \u00f6ffnen. Shift (\u21e7)-Cmd (\u2318) + F Fenster \"Zuletzt benutzt\" \u00f6ffnen, das alle k\u00fcrzlich angesehenen oder ge\u00e4nderten Dateien auflistet. Shift (\u21e7)-Cmd (\u2318) + G Ein Fenster \"Gehe zum Ordner\" \u00f6ffnen. Shift (\u21e7)-Cmd (\u2318) + H Benutzerordner des aktuellen macOS-Benutzeraccounts \u00f6ffnen. Shift (\u21e7)-Cmd (\u2318) + I iCloud Drive \u00f6ffnen. Shift (\u21e7)-Cmd (\u2318) + K Fenster \"Netzwerk\" \u00f6ffnen. Option (\u2325)-Cmd (\u2318) + L Ordner \"Downloads\" \u00f6ffnen. Shift (\u21e7)-Cmd (\u2318) + N Neuen Ordner erstellen. Shift (\u21e7)-Cmd (\u2318) + O Ordner \"Dokumente\" \u00f6ffnen. Shift (\u21e7)-Cmd (\u2318) + P Vorschaufenster in Finder-Fenstern ein- oder ausblenden. Shift (\u21e7)-Cmd (\u2318) + R Fenster \"AirDrop\" \u00f6ffnen. Shift (\u21e7)-Cmd (\u2318) + T Tableiste in Finder-Fenstern ein- oder ausblenden. Ctrl (\u2303)-Shift (\u21e7)-Cmd (\u2318) + T Das ausgew\u00e4hlte Finder-Objekt dem Dock hinzuf\u00fcgen (OS\u00a0X Mavericks oder neuer) Shift (\u21e7)-Cmd (\u2318) + U Ordner \"Dienstprogramme\" \u00f6ffnen. Option (\u2325)-Cmd (\u2318) + D Dock ein- oder ausblenden. Ctrl (\u2303)-Cmd (\u2318) + T Das ausgew\u00e4hlte Objekt der Seitenleiste hinzuf\u00fcgen (OS\u00a0X Mavericks oder neuer). Option (\u2325)-Cmd (\u2318) + P Pfadleiste in Finder-Fenstern ein- oder ausblenden. Option (\u2325)-Cmd (\u2318) + S Seitenleiste in Finder-Fenstern ein- oder ausblenden. Cmd (\u2318) + Schr\u00e4gstrich (/) Statusleiste in Finder-Fenstern ein- oder ausblenden. Cmd (\u2318) + J DarstellungsOption (\u2325)en einblenden. Cmd (\u2318) + K Das Fenster \"Mit Server verbinden\" \u00f6ffnen. Ctrl (\u2303) + Cmd (\u2318) +A Erstelle einen Alias f\u00fcr das ausgew\u00e4hlte Element. Cmd (\u2318) + N Ein neues Finder-Fenster \u00f6ffnen. Option (\u2325) + Cmd (\u2318) + N Neuen intelligenten Ordner erstellen. Cmd (\u2318) + T Tableiste ein- oder ausblenden, wenn nur ein Tab im aktuellen Finder ge\u00f6ffnet ist. Option (\u2325) + Cmd (\u2318) + T Symbolleiste ein- oder ausblenden, wenn nur ein Tab im aktuellen Finder-Fenster ge\u00f6ffnet ist. Option (\u2325) + Cmd (\u2318) + V Dateien in der Zwischenablage von ihrem urspr\u00fcnglichen zum aktuellen Speicherort bewegen. Cmd (\u2318) + Y Die Funktion \"\u00dcbersicht\" zum Anzeigen einer Vorschau der ausgew\u00e4hlten Dateien nutzen. Option (\u2325)-Cmd (\u2318) + Y In der \u00dcbersicht eine Diashow der ausgew\u00e4hlten Dateien anzeigen. Cmd (\u2318) + 1 Die Objekte im Finder-Fenster als Symbole anzeigen. Cmd (\u2318) + 2 Die Objekte im Finder-Fenster als Liste anzeigen. Cmd (\u2318) + 3 Die Objekte im Finder-Fenster in Spalten anzeigen. Cmd (\u2318) + 4 Die Objekte im Finder-Fenster in einer Galerie anzeigen. Cmd (\u2318) + linke eckige Klammer ([) Zum vorherigen Ordner wechseln. Cmd (\u2318) + rechte eckige Klammer (]) Zum n\u00e4chsten Ordner wechseln. Cmd (\u2318) + Aufw\u00e4rtspfeil Ordner mit dem aktuellen Ordner \u00f6ffnen. Cmd (\u2318) + Ctrl (\u2303) + Aufw\u00e4rtspfeil Ordner mit dem aktuellen Ordner in einem neuen Fenster \u00f6ffnen. Cmd (\u2318) + Abw\u00e4rtspfeil Ausgew\u00e4hltes Objekt \u00f6ffnen. Rechtspfeil Ausgew\u00e4hlten Ordner \u00f6ffnen. Diese Funktion ist nur in der Listendarstellung verf\u00fcgbar. Linkspfeil Ausgew\u00e4hlten Ordner schlie\u00dfen. Diese Funktion ist nur in der Listendarstellung verf\u00fcgbar. Cmd (\u2318) + R\u00fcckschritttaste Das markierte Objekt in den Papierkorb verschieben. Shift (\u21e7)-Cmd (\u2318) + R\u00fcckschritttaste Den Papierkorb leeren. Option (\u2325) + Shift (\u21e7) + Cmd (\u2318) + R\u00fcckschritttaste Den Papierkorb ohne Best\u00e4tigungsdialog leeren. Cmd (\u2318) +Helligkeit verringern Bildschirmsynchronisation ein- bzw. ausschalten, wenn der Mac mit mehr als einem Monitor verbunden ist. Option (\u2325)-Helligkeit erh\u00f6hen Systemeinstellung \"Monitore\" \u00f6ffnen. Dies funktioniert mit beiden Helligkeitstasten. Ctrl (\u2303)-Helligkeit erh\u00f6hen oder Ctrl (\u2303)-Helligkeit verringern Helligkeit des externen Displays \u00e4ndern (falls vom Display unterst\u00fctzt). Option (\u2325)-Shift (\u21e7)-Helligkeit erh\u00f6hen oder Option (\u2325)-Shift (\u21e7)-Helligkeit verringern Display-Helligkeit in kleineren Schritten \u00e4ndern. F\u00fcge die Ctrl (\u2303)-Taste hinzu, um die Anpassung am externen Display vorzunehmen, sofern das Display dies unterst\u00fctzt. Option (\u2325)-Mission Control Systemeinstellung \"Mission Control\" \u00f6ffnen. Cmd (\u2318) +Mission Control Den Schreibtisch anzeigen. Ctrl (\u2303)-Abw\u00e4rtspfeil Alle Fenster der vordersten App einblenden. Option (\u2325) + Lauter Systemeinstellung \"Ton\" \u00f6ffnen. Dies funktioniert mit allen Lautst\u00e4rketasten. Option (\u2325) + Shift (\u21e7)-Lauter oder Option (\u2325)-Shift (\u21e7)-Leiser Lautst\u00e4rke in kleineren Schritten regeln. Option (\u2325) + Tastaturhelligkeit erh\u00f6hen Systemeinstellung \"Tastatur\" \u00f6ffnen. Dies funktioniert mit beiden Tastaturhelligkeitstasten. Option (\u2325) + Shift (\u21e7)-Tastaturhelligkeit erh\u00f6hen oder Option (\u2325)-Shift (\u21e7)-Tastaturhelligkeit verringern Tastaturhelligkeit in kleineren Schritten anpassen. Option (\u2325) + Doppelklick Einen Ordner in einem neuen Fenster \u00f6ffnen und das aktuelle Fenster schlie\u00dfen. Cmd (\u2318) +Doppelklick Einen Ordner in einem neuen Tab oder Fenster \u00f6ffnen. Cmd (\u2318) beim Ziehen auf ein anderes Volume Gezogenes Objekt auf ein anderes Volume verschieben, anstatt es zu kopieren. Option (\u2325) beim Ziehen Gezogenes Objekt kopieren. Der Mauszeiger \u00e4ndert sich, w\u00e4hrend du das Objekt ziehst. Option (\u2325)-Cmd (\u2318) beim Ziehen Alias des gezogenen Objekts erstellen. Der Mauszeiger \u00e4ndert sich, w\u00e4hrend du das Objekt ziehst. Option (\u2325)-Klick auf ein Erweiterungsdreieck Alle Ordner im ausgew\u00e4hlten Ordner \u00f6ffnen. Diese Funktion ist nur in der Listendarstellung verf\u00fcgbar. Cmd (\u2318) +Klick auf Fenstertitel Ordner anzeigen, die den aktuellen Ordner enthalten. Klicke in der Finder-Men\u00fcleiste auf das Men\u00fc \"Gehe zu\", um Kurzbefehle zum \u00d6ffnen vieler h\u00e4ufig benutzter Ordner zu sehen, z.\u00a0B. \"Programme\", \"Dokumente\", \"Downloads\", \"Dienstprogramme\" und \"iCloud Drive\"."},{"location":"shortcuts/#kurzbefehle-fur-dokumente","title":"Kurzbefehle f\u00fcr Dokumente","text":"<p>Das Verhalten dieser Kurzbefehle kann je nach verwendeter App variieren.</p> Shortcut Beschreibung Cmd (\u2318) +B Den ausgew\u00e4hlten Text fett formatieren bzw. Fettschrift ein- oder ausschalten. Cmd (\u2318) +I Den ausgew\u00e4hlten Text kursiv formatieren bzw. Kursivschrift ein- oder ausschalten. Cmd (\u2318) +K Einen Weblink hinzuf\u00fcgen. Cmd (\u2318) +U Den ausgew\u00e4hlten Text unterstrichen formatieren bzw. Unterstreichung ein- oder ausschalten. Cmd (\u2318) +T Das Fenster \"Schriften\" ein- oder ausblenden. Cmd (\u2318) +D Den Ordner \"Schreibtisch\" in den Dialogfenstern \"\u00d6ffnen\" oder \"Sichern\" ausw\u00e4hlen. Ctrl (\u2303)-Cmd (\u2318) +D Die Definition eines ausgew\u00e4hlten Worts ein- oder ausblenden. Shift (\u21e7)-Cmd (\u2318) +Doppelpunkt ( ) Fenster \"Rechtschreibung und Grammatik\" einblenden. Cmd (\u2318) +Semikolon (;) Falsch geschriebene W\u00f6rter im Dokument suchen. Option (\u2325)-R\u00fcckschritttaste Das Wort links von der Einf\u00fcgemarke l\u00f6schen. Ctrl (\u2303)-H Das Zeichen links von der Einf\u00fcgemarke l\u00f6schen. Verwende alternativ die R\u00fcckschritttaste. Ctrl (\u2303)-D Das Zeichen rechts von der Einf\u00fcgemarke l\u00f6schen. Verwende alternativ Fn-R\u00fcckschritttaste. Fn-R\u00fcckschritttaste Vorw\u00e4rts l\u00f6schen auf Tastaturen, die keine Entf-Taste haben. Verwende alternativ Ctrl (\u2303)-D. Ctrl (\u2303)-K Text zwischen der Einf\u00fcgemarke und dem Ende der aktuellen Zeile oder des Absatzes l\u00f6schen. Fn-Aufw\u00e4rtspfeil Seite nach oben Eine Seite nach oben bl\u00e4ttern. Fn-Abw\u00e4rtspfeil Seite nach unten Eine Seite nach unten bl\u00e4ttern. Fn-Linkspfeil Pos1 Zum Anfang eines Dokuments bl\u00e4ttern. Fn-Rechtspfeil Ende Zum Ende eines Dokuments bl\u00e4ttern. Cmd (\u2318) +Aufw\u00e4rtspfeil Einf\u00fcgemarke an den Anfang des Dokuments bewegen. Cmd (\u2318) +Abw\u00e4rtspfeil Einf\u00fcgemarke an das Ende des Dokuments bewegen. Cmd (\u2318) +Linkspfeil Einf\u00fcgemarke an den Anfang der aktuellen Zeile bewegen. Cmd (\u2318) +Rechtspfeil Einf\u00fcgemarke an das Ende der aktuellen Zeile bewegen. Option (\u2325)-Linkspfeil Einf\u00fcgemarke an den Anfang des vorhergehenden Worts bewegen. Option (\u2325)-Rechtspfeil Einf\u00fcgemarke an das Ende des n\u00e4chsten Worts bewegen. Shift (\u21e7)-Cmd (\u2318) +Aufw\u00e4rtspfeil Text zwischen der Einf\u00fcgemarke und dem Anfang des Dokuments markieren. Shift (\u21e7)-Cmd (\u2318) +Abw\u00e4rtspfeil Text zwischen der Einf\u00fcgemarke und dem Ende des Dokuments markieren. Shift (\u21e7)-Cmd (\u2318) +Linkspfeil Text zwischen der Einf\u00fcgemarke und dem Anfang der aktuellen Zeile markieren. Shift (\u21e7)-Cmd (\u2318) +Rechtspfeil Text zwischen der Einf\u00fcgemarke und dem Ende der aktuellen Zeile markieren. Shift (\u21e7)-Aufw\u00e4rtspfeil Textauswahl auf das der aktuellen Position am n\u00e4chsten liegende Zeichen in der dar\u00fcberliegenden Zeile erweitern. Shift (\u21e7)-Abw\u00e4rtspfeil Textauswahl auf das der aktuellen Position am n\u00e4chsten liegende Zeichen in der darunterliegenden Zeile erweitern. Shift (\u21e7)-Linkspfeil Textauswahl um ein Zeichen nach links erweitern. Shift (\u21e7)-Rechtspfeil Textauswahl um ein Zeichen nach rechts erweitern. Option (\u2325)-Shift (\u21e7)-Aufw\u00e4rtspfeil Textauswahl bis zum Anfang des aktuellen Absatzes erweitern, bei nochmaligem Dr\u00fccken bis zum Anfang des n\u00e4chsten Absatzes. Option (\u2325)-Shift (\u21e7)-Abw\u00e4rtspfeil Textauswahl bis zum Ende des aktuellen Absatzes erweitern, bei nochmaligem Dr\u00fccken bis zum Ende des n\u00e4chsten Absatzes. Option (\u2325)-Shift (\u21e7)-Linkspfeil Textauswahl bis zum Anfang des aktuellen Worts erweitern, bei nochmaligem Dr\u00fccken bis zum Anfang des n\u00e4chsten Worts. Option (\u2325)-Shift (\u21e7)-Rechtspfeil Textauswahl bis zum Ende des aktuellen Worts erweitern, bei nochmaligem Dr\u00fccken bis zum Ende des n\u00e4chsten Worts. Ctrl (\u2303)-A Zum Anfang der Zeile oder des Absatzes bewegen. Ctrl (\u2303)-E Zum Ende einer Zeile oder eines Absatzes bewegen. Ctrl (\u2303)-F Ein Zeichen vor bewegen. Ctrl (\u2303)-B Ein Zeichen zur\u00fcck bewegen. Ctrl (\u2303)-L Cursor oder Auswahl im sichtbaren Bereich zentrieren. Ctrl (\u2303)-P Eine Zeile nach oben bewegen Ctrl (\u2303)-N Eine Zeile nach unten bewegen. Ctrl (\u2303)-O Neue Zeile hinter der Einf\u00fcgemarke einf\u00fcgen. Ctrl (\u2303)-T Das Zeichen hinter der Einf\u00fcgemarke mit dem Zeichen davor austauschen. Cmd (\u2318) +linke geschweifte Klammer ({) Linksb\u00fcndig. Cmd (\u2318) +rechte geschweifte Klammer (}) Rechtsb\u00fcndig. Shift (\u21e7)-Cmd (\u2318) +Senkrechtstrich ( ) Zentrieren. Option (\u2325)-Cmd (\u2318) +F Zum Suchfeld wechseln. Option (\u2325)-Cmd (\u2318) +T Symbolleiste in der App ein- oder ausblenden. Option (\u2325)-Cmd (\u2318) +C Stil kopieren Formatierungseinstellungen des ausgew\u00e4hlten Objekts in die Zwischenablage kopieren. Option (\u2325)-Cmd (\u2318) +V Stil einsetzen Die kopierten Formatierungseinstellungen auf das ausgew\u00e4hlte Objekt anwenden. Option (\u2325)-Shift (\u21e7)-Cmd (\u2318) +V Einsetzen und Stil anpassen Den Stil des umgebenden Inhalts auf das darin eingesetzte Objekt anwenden. Option (\u2325)-Cmd (\u2318) +I Das Fenster \"Informationen\" ein- oder ausblenden. Shift (\u21e7)-Cmd (\u2318) + P Papierformat Ein Fenster zur Auswahl von Dokumenteinstellungen anzeigen. Shift (\u21e7)-Cmd (\u2318) + S Dialogfenster \"Sichern unter\" anzeigen oder aktuelles Dokument duplizieren. Shift (\u21e7)-Cmd (\u2318) + (\u2013) Ausgew\u00e4hltes Objekt verkleinern. Shift (\u21e7)-Cmd (\u2318) + (+) Ausgew\u00e4hltes Objekt vergr\u00f6\u00dfern. Cmd (\u2318) +Gleichheitszeichen (=) f\u00fchrt dieselbe Funktion aus. Shift (\u21e7)-Cmd (\u2318) + (?) Hilfe-Men\u00fc \u00f6ffnen."},{"location":"valet/","title":"Valet","text":"","tags":["valet","commandos"]},{"location":"valet/#kommandos","title":"Kommandos","text":"","tags":["valet","commandos"]},{"location":"valet/#valet-erstellt-v-hosts-links-htttpwwwmeine-lokale-webseitetest-und-htttpswwwmeine-lokale-webseitetest","title":"Valet: Erstellt V-Hosts Links: htttp://www.meine-lokale-webseite.test und htttps://www.meine-lokale-webseite.test","text":"<pre><code>valet link --secure meine-lokale-webseite\n</code></pre>","tags":["valet","commandos"]},{"location":"valet/#valet-loscht-die-v-hosts-links-htttpwwwmeine-lokale-webseitetest-und-htttpswwwmeine-lokale-webseitetest","title":"Valet: L\u00f6scht die V-Hosts Links: htttp://www.meine-lokale-webseite.test und htttps://www.meine-lokale-webseite.test","text":"<pre><code>valet unlink --secure meine-lokale-webseite\n</code></pre>","tags":["valet","commandos"]},{"location":"valet/#valet-alle-registrierten-valet-links-anzeigen","title":"Valet: Alle registrierten Valet-Links anzeigen","text":"<pre><code>valet links\n</code></pre>","tags":["valet","commandos"]},{"location":"valet/#valet-listet-alle-verfugbaren-valet-kommandos-auf","title":"Valet: Listet alle verf\u00fcgbaren Valet Kommandos auf","text":"<pre><code>valet -h\nvalet --help\n</code></pre>","tags":["valet","commandos"]},{"location":"vs-code-plugins/","title":"Vs code plugins","text":"Plugin Auto Close Tag Better Comments Better Pest DotENV Dummy Text Generator EditorConfig for VS Code Filament Snippets Git Blame Git History GitHub Pull Requests and Issues GitHub Theme gitignore Image preview Laravel Artisan Laravel Blade formatter Laravel Blade Snippets Laravel Create View Laravel Extension Pack Laravel goto view laravel intellisense Laravel Pint Formatter Laravel Snippets laravel-goto-components Livewire Language Support Markdown All in One Markdown Preview Mermaid Support Mermaid Markdown Syntax Highlighting Mermaid Preview MSSQL Snippets Output Colorizer Pest Snippets PHP Intelephense PHP IntelliSense Rainbow Brackets 2 Remote - SSH Remote - SSH: Editing Configuration Files SVG TODO Highlight vscode-icons Sort lines"},{"location":"composer/pest/","title":"Pest","text":"","tags":["composer","pest"]},{"location":"composer/pest/#composerjson","title":"composer.json","text":"<pre><code>{\n\"require-dev\": {\n\"pestphp/pest\": \"^1.22\",\n\"pestphp/pest-plugin-laravel\": \"^1.3\",\n\"pestphp/pest-plugin-livewire\": \"^1.0\",\n\"phpstan/extension-installer\": \"^1.1\",\n\"phpstan/phpstan-deprecation-rules\": \"^1.0\",\n\"phpstan/phpstan-phpunit\": \"^1.0\",\n\"phpunit/php-code-coverage\": \"^9.2\",\n\"phpunit/phpunit\": \"^9.5\"\n},\n\"scripts\": {\n\"test:pest\": \"vendor/bin/pest --order-by default -d memory_limit=6144M\",\n\"test:pest-coverage\": \"php -dpcov.enabled=1 -dpcov.directory=. -dpcov.exclude='~vendor~' vendor/bin/pest -d memory_limit=6144M --testdox --verbose --coverage --min=85\",\n\"test:unit\": \"vendor/bin/testbench package:test --no-coverage\",\n\"test:types\": \"vendor/bin/phpstan analyse\",\n\"test\": [\n\"@lint:fix\",\n\"@test:types\",\n\"@test:unit\"\n]\n}\n</code></pre>","tags":["composer","pest"]},{"location":"github/git/","title":"Git","text":"","tags":["github","push","force-push","github-key"]},{"location":"github/git/#force-push-git-branches","title":"Force push git branches","text":"<pre><code>git push --force origin main\ngit push -f origin main\ngit push origin +main\n</code></pre> <ul> <li>Original tweet by Stefan Judis</li> </ul>","tags":["github","push","force-push","github-key"]},{"location":"github/git/#github-key-anpassen-bzw-bereinigen","title":"Github key anpassen bzw. bereinigen","text":"<pre><code>composer update --lock\n</code></pre> <pre><code>composer update --lock s\n</code></pre>","tags":["github","push","force-push","github-key"]},{"location":"github/issues-verlinken/","title":"Issues verlinken","text":"<p>Sie k\u00f6nnen einen Pull-Request oder Branch mit einem Issue verkn\u00fcpfen, um anzuzeigen, dass eine Behebung in Bearbeitung ist, und um das Issue automatisch zu schlie\u00dfen, wenn der Pull-Request oder Branch zusammengef\u00fchrt wird.</p> <p>Hinweis: Die speziellen Schl\u00fcsselw\u00f6rter in einer Pull-Request-Beschreibung werden interpretiert, wenn die Pull-Request auf den Default - Branch des Repositorys abzielt. Wenn die Basis des PR jedoch ein anderer Zweig ist, werden diese Schl\u00fcsselw\u00f6rter ignoriert, es werden keine Links erstellt und das Zusammenf\u00fchren des PR hat keine Auswirkung auf die Ausgaben. Wenn Sie einen Pull-Request \u00fcber ein Schl\u00fcsselwort mit einem Issue verkn\u00fcpfen m\u00f6chten, muss sich der PR auf dem Standard-Branch befinden.</p>","tags":["composer","github","github-key"]},{"location":"github/issues-verlinken/#uber-verknupfte-probleme-und-pull-requests","title":"\u00dcber verkn\u00fcpfte Probleme und Pull-Requests","text":"<p>Sie k\u00f6nnen ein Problem manuell mit einer Pull-Anforderung verkn\u00fcpfen oder ein unterst\u00fctztes Schl\u00fcsselwort in der Beschreibung der Pull-Anforderung verwenden.</p> <p>Wenn Sie eine Pull-Anforderung mit dem Problem verkn\u00fcpfen, auf das sich die Pull-Anforderung bezieht, k\u00f6nnen Mitbearbeiter sehen, dass jemand an dem Problem arbeitet.</p> <p>Wenn Sie einen verkn\u00fcpften Pull-Request mit dem Standard-Branch eines Repositorys zusammenf\u00fchren, wird das verkn\u00fcpfte Issue automatisch geschlossen. Weitere Informationen zum Standard-Zweig finden Sie unter \u201e \u00c4ndern des Standard-Zweigs \u201c.</p>","tags":["composer","github","github-key"]},{"location":"github/issues-verlinken/#verknupfen-einer-pull-anforderung-mit-einem-problem-mithilfe-eines-schlusselworts","title":"Verkn\u00fcpfen einer Pull-Anforderung mit einem Problem mithilfe eines Schl\u00fcsselworts","text":"<p>Sie k\u00f6nnen eine Pull-Anforderung mit einem Problem verkn\u00fcpfen, indem Sie ein unterst\u00fctztes Schl\u00fcsselwort in der Beschreibung der Pull-Anforderung oder in einer Commit-Nachricht verwenden. Die Pull-Anfrage muss sich im Standard-Branch befinden.</p> <ul> <li>nah dran</li> <li>schlie\u00dft</li> <li>abgeschlossen</li> <li>Fix</li> <li>behebt</li> <li>Fest</li> <li>beschlie\u00dfen</li> <li>beschlie\u00dft</li> <li>aufgel\u00f6st</li> </ul> <p>Wenn Sie ein Schl\u00fcsselwort verwenden, um auf einen Pull-Request-Kommentar in einem anderen Pull-Request zu verweisen, werden die Pull-Requests verkn\u00fcpft. Durch das Zusammenf\u00fchren der referenzierenden Pull-Anforderung wird auch die referenzierte Pull-Anforderung geschlossen.</p> <p>Die Syntax zum Schlie\u00dfen von Schl\u00fcsselw\u00f6rtern h\u00e4ngt davon ab, ob sich das Problem im selben Repository wie die Pull-Anfrage befindet.</p> Verkn\u00fcpftes Problem Syntax Beispiel Ausgabe im selben Repository SCHL\u00dcSSELWORT # AUSGABE -NUMMER <code>Closes #10</code> Ausgabe in einem anderen Repository KEYWORD OWNER / REPOSITORY # ISSUE-NUMBER <code>Fixes octo-org/octo-repo#100</code> Mehrere Probleme Verwenden Sie f\u00fcr jedes Problem die vollst\u00e4ndige Syntax <code>Resolves #10, resolves #123, resolves octo-org/octo-repo#100</code> <p>Nur manuell verkn\u00fcpfte Pull-Requests k\u00f6nnen manuell entkoppelt werden. Um die Verkn\u00fcpfung eines Problems aufzuheben, das Sie mit einem Schl\u00fcsselwort verkn\u00fcpft haben, m\u00fcssen Sie die Pull-Request-Beschreibung bearbeiten, um das Schl\u00fcsselwort zu entfernen.</p> <p>Sie k\u00f6nnen auch schlie\u00dfende Schl\u00fcsselw\u00f6rter in einer Commit-Nachricht verwenden. Das Problem wird geschlossen, wenn Sie den Commit in den Standard-Branch zusammenf\u00fchren, aber die Pull-Anforderung, die den Commit enth\u00e4lt, wird nicht als verkn\u00fcpfte Pull-Anforderung aufgef\u00fchrt.</p> <p>Jeder mit Schreibberechtigungen f\u00fcr ein Repository kann eine Pull-Anforderung manuell mit einem Vorgang \u00fcber die Seitenleiste f\u00fcr Pull-Anforderungen verkn\u00fcpfen.</p> <p>Sie k\u00f6nnen bis zu zehn Issues manuell mit jeder Pull-Anfrage verkn\u00fcpfen. Das Issue und die Pull-Anforderung m\u00fcssen sich im selben Repository befinden.</p> <ol> <li> <p>Navigieren Sie auf GitHub.com zur Hauptseite des Repositorys.</p> </li> <li> <p>Klicken Sie unter Ihrem Repository-Namen auf Pull-Anforderungen .</p> <p></p> </li> <li> <p>Klicken Sie in der Liste der Pull-Requests auf den Pull-Request, den Sie mit einem Issue verkn\u00fcpfen m\u00f6chten.</p> </li> <li> <p>Klicken Sie in der rechten Seitenleiste im Abschnitt \"Entwicklung\" auf .</p> </li> <li> <p>Klicken Sie auf das Problem, das Sie mit der Pull-Anforderung verkn\u00fcpfen m\u00f6chten. </p> </li> </ol> <p>Jeder mit Schreibberechtigungen f\u00fcr ein Repository kann eine Pull-Anfrage manuell verkn\u00fcpfen oder von der Issue-Seitenleiste zu einem Issue verzweigen.</p> <p>Sie k\u00f6nnen bis zu zehn Issues manuell mit jeder Pull-Anfrage verkn\u00fcpfen. Das Problem kann sich in einem anderen Repository befinden als der verkn\u00fcpfte Pull-Request oder Branch. Ihr zuletzt ausgew\u00e4hltes Repository wird gespeichert</p> <ol> <li> <p>Navigieren Sie auf GitHub.com zur Hauptseite des Repositorys.</p> </li> <li> <p>Klicken Sie unter Ihrem Repository-Namen auf Issues .</p> <p></p> </li> <li> <p>Klicken Sie in der Liste der Issues auf das Issue, mit dem Sie eine Pull-Anfrage oder einen Branch verkn\u00fcpfen m\u00f6chten.</p> </li> <li> <p>Klicken Sie in der rechten Seitenleiste auf Entwicklung . </p> </li> <li> <p>Klicken Sie auf das Repository mit der Pull-Anfrage oder dem Zweig, den Sie mit dem Problem verkn\u00fcpfen m\u00f6chten. </p> </li> <li> <p>Klicken Sie auf den Pull-Request oder Branch, den Sie mit dem Issue verkn\u00fcpfen m\u00f6chten. </p> </li> <li> <p>Klicken Sie auf Anwenden . </p> </li> </ol>","tags":["composer","github","github-key"]},{"location":"github/issues-verlinken/#weiterlesen","title":"Weiterlesen","text":"<ul> <li>\" Automatisch verlinkte Verweise und URLs \"</li> </ul>","tags":["composer","github","github-key"]},{"location":"laravel/arr/","title":"Arr","text":"","tags":["laravel","arr","helper"]},{"location":"laravel/arr/#throw-an-exception","title":"Throw an exception","text":"<pre><code>&lt;?php\n$config = ['.......'];\n$apiKey = Arr::get($config, 'api_key', fn () =&gt; throw new Exeption('your message here'));\n// or\n$apiKey = $config['api_key'] ?? throw new Exeption('your message here'));\n</code></pre> <ul> <li>Original tweet by Steve Bauman</li> </ul>","tags":["laravel","arr","helper"]},{"location":"laravel/collection/","title":"Collection","text":"","tags":["laravel","collection","sort","sortKeys"]},{"location":"laravel/collection/#sort","title":"sort","text":"<pre><code>&lt;?php\n$exampleEntries = [\n'my example exa' =&gt; 'value_4',\n'my example' =&gt; 'value_1',\n'my example ex' =&gt; 'value_3',\n'my example e' =&gt; 'value_2',\n];\n$result = collect($exampleEntries)-&gt;sort()-&gt;toArray();\n$result = [\n\"my example\" =&gt; \"value_1\",\n\"my example e\" =&gt; \"value_2\",\n\"my example ex\" =&gt; \"value_3\",\n\"my example exa\" =&gt; \"value_4\",\n]\n</code></pre>","tags":["laravel","collection","sort","sortKeys"]},{"location":"laravel/collection/#sortkeys","title":"sortKeys","text":"<pre><code>&lt;?php\n$exampleEntries = [\n'key_1' =&gt; 'value_1',\n'key_3' =&gt; 'value_3',\n'key_2' =&gt; 'value_2',\n'key_7' =&gt; 'value_7',\n'key_4' =&gt; 'value_4',\n'key_6' =&gt; 'value_6',\n'key_5' =&gt; 'value_5',\n];\n$result = collect($exampleEntries)-&gt;sortKeys()-&gt;toArray();\n$result = [\n\"key_1\" =&gt; \"value_1\",\n\"key_2\" =&gt; \"value_2\",\n\"key_3\" =&gt; \"value_3\",\n\"key_4\" =&gt; \"value_4\",\n\"key_5\" =&gt; \"value_5\",\n\"key_6\" =&gt; \"value_6\",\n\"key_7\" =&gt; \"value_7\",\n]\n</code></pre>","tags":["laravel","collection","sort","sortKeys"]},{"location":"laravel/eloquent/","title":"Eloquent","text":"","tags":["laravel","eloquent","touch"]},{"location":"laravel/eloquent/#touch-eloquent-method","title":"Touch eloquent method","text":"<pre><code>&lt;?php\n$user = User::find(1);\n// instead of\n$user-&gt;update(['subscribed_at' =&gt; now()]);\n// use\n$user-&gt;touch('subscribed_at');\n</code></pre> <ul> <li>Original tweet by Oussama Sid</li> </ul>","tags":["laravel","eloquent","touch"]},{"location":"laravel/migrations/","title":"Migrations","text":"","tags":["laravel","databse","DB","unique","migration"]},{"location":"laravel/migrations/#unique-columns","title":"Unique columns","text":"<p>Laravel Example 1:</p> <pre><code>&lt;?php\nDB::update(\"\n    ALTER TABLE tournament_league_game_days\n    ADD COLUMN game_schedule_day_unique varchar (512)\n    GENERATED ALWAYS AS\n    (\n        CONCAT(\n            CONCAT(day, '#', game_schedule_id),\n            '#',\n            IF(deleted_at IS NULL, '-',  deleted_at)\n        )\n    ) VIRTUAL;\n\");\nDB::update(\"\n    CREATE UNIQUE INDEX game_schedule_day_unique ON tournament_league_game_days (game_schedule_day_unique);\n\");\n</code></pre> <p>Laravel Example 2:</p> <pre><code>&lt;?php\nSchema::table('tournament_league_game_days', function (Blueprint $table) {\n$table-&gt;string('game_schedule_day_unique')\n-&gt;virtualAs(\nDB::raw(\n\"CONCAT(\n                    CONCAT(day, '#', game_schedule_id),\n                    '#',\n                    IF(deleted_at IS NULL, '-',  deleted_at)\n                )\"\n)\n);\n});\nSchema::table('tournament_league_game_days', function (Blueprint $table) {\n$table-&gt;unique(['game_schedule_day_unique'], 'game_schedule_day_unique_index');\n});\n</code></pre> <ul> <li>Original tweet by Tobias_Petry.sql</li> </ul>","tags":["laravel","databse","DB","unique","migration"]},{"location":"laravel/route/","title":"Route","text":"","tags":["laravel","route"]},{"location":"laravel/route/#test-route","title":"Test-Route","text":"<pre><code>&lt;?php\nuse Illuminate\\Support\\Facades\\Route;\nRoute::get('/test-route', function () {\n// return your example\n})\n</code></pre>","tags":["laravel","route"]},{"location":"laravel/route/#withoutmiddleware","title":"withoutMiddleware","text":"<pre><code>&lt;?php\nuse App\\Http\\Middleware\\FirstMiddleware;\nuse App\\Http\\Middleware\\SecondMiddleware;\nuse Illuminate\\Support\\Facades\\Route;\nRoute::prefix('my-prefix')\n-&gt;middleware([\nFirstMiddleware::class,\nSecondMiddleware::class,\n])\n-&gt;group(function () {\nRoute::get('my-route', function () {\n// Uses first &amp; second middleware\n});\nRoute::withoutMiddleware(FirstMiddleware::class)\n-&gt;get('route-without-first-middleware', function () {\n// Uses second middleware\n});\nRoute::withoutMiddleware(SecondMiddleware::class)\n-&gt;get('route-without-second-middleware', function () {\n// Uses first middleware\n});\nRoute::withoutMiddleware([\nFirstMiddleware::class,\nSecondMiddleware::class,\n])-&gt;get('route-without-middleware', function () {\n// Uses no middleware\n}\n);\n});\n</code></pre>","tags":["laravel","route"]},{"location":"laravel/route/#with-parameters","title":"with Parameters","text":"<pre><code>&lt;?php\nnamespace App\\Http\\Middleware;\nuse Closure;\nclass EnsureUserHasRole\n{\npublic function handle($request, Closure $next, $role)\n{\nif (! $request-&gt;user()-&gt;hasRole($role)) {\n// Redirect...\n}\nreturn $next($request);\n}\n}\n</code></pre> <pre><code>&lt;?php\nuse Illuminate\\Support\\Facades\\Route;\nRoute::put('/post/{id}', function ($id) {\n//\n})-&gt;middleware('role:editor');\n</code></pre>","tags":["laravel","route"]},{"location":"laravel/tests/","title":"Tests","text":"","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#expectexception-and-expectexceptionmessage","title":"expectException and expectExceptionMessage","text":"<pre><code>&lt;?php\nuse Application\\User\\Queries\\ListUserQuery;\nuse Illuminate\\Http\\Request;\nuse Spatie\\QueryBuilder\\Exceptions\\InvalidFilterQuery;\nuse Tests\\TestCase;\nclass ListUserQueryTest extends TestCase\n{\n/** @test */\npublic function it_throws_an_exception_when_the_key_for_filtering_is_not_supported(): void\n{\n$this-&gt;expectException(InvalidFilterQuery::class);\n$this-&gt;expectExceptionMessage('Requested filter(s) `key_not_supported` are not allowed. Allowed filter(s) are `id, email, nickname`.');\n$request = new Request(['filter' =&gt; ['key_not_supported' =&gt; 'value is irrelevant']]);\nnew ListMyModelQuery($request);\n}\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#it_uses_the_right_query_filters","title":"it_uses_the_right_query_filters","text":"<pre><code>&lt;?php\n/** @test */\npublic function it_uses_the_right_query_filters(): void\n{\n$this-&gt;assertQueryFilterEquals(\nListMyModelQuery::class,\n[\nAllowedFilter::exact('id'),\nAllowedFilter::exact('handle'),\nAllowedFilter::partial('name', 'display_name'),\n]\n);\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#assertthrows-it_throws_an_error_if_model_doesnt_exist","title":"assertThrows | it_throws_an_error_if_model_doesnt_exist","text":"<pre><code>&lt;?php\n/** @test */\npublic function it_throws_an_error_if_model_doesnt_exist(): void\n{\n$className = User::class;\n$this-&gt;assertThrows(\nfn () =&gt; User::findOrFail(0),\nModelNotFoundException::class,\n\"No query results for model [{$className}] 1\"\n);\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#it_uses_the_right_query_class","title":"it_uses_the_right_query_class","text":"<pre><code>&lt;?php\n/** @test */\npublic function it_uses_the_right_query_class(): void\n{\n$query = $this-&gt;mock(\nListMyModelQuery::class,\nfn (MockInterface $mock) =&gt; $mock-&gt;shouldReceive('simplePaginate')\n-&gt;once()\n-&gt;andReturn(MyModelFactory::new()-&gt;create()-&gt;simplePaginate()),\n);\n$controller = new ViewMyModelListController();\n$controller($query, new Request());\n$this-&gt;assertControllerUsesClass(\nViewMyModelListController::class,\nListMyModelQuery::class\n);\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#it_uses_the_right_collection","title":"it_uses_the_right_collection","text":"<pre><code>&lt;?php\n/** @test */\npublic function it_uses_the_right_collection(): void\n{\n$this-&gt;assertControllerReturns(\nViewMyModelListController::class,\nMyModelCollection::class\n);\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#it_uses_the_right_middleware","title":"it_uses_the_right_middleware","text":"<pre><code>&lt;?php\npublic function middlewares(): array\n{\nreturn [\n'group1' =&gt; ['group1_sub1', 'group1_sub2'],\n'group2' =&gt; ['group2_sub1', 'group2_sub2'],\nMyMiddleware::class =&gt; [MyMiddleware::class],\n];\n}\n/**\n     * @test\n     *\n     * @dataProvider middlewares\n     */\npublic function it_uses_the_right_middleware($middleware)\n{\n$this-&gt;assertControllerUsesMiddleware(\nViewMyModelListController::class,\n$middleware,\n);\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#it_returns_the_right_structure-collection","title":"it_returns_the_right_structure | Collection","text":"<pre><code>&lt;?php\n/** @test */\npublic function it_returns_the_right_structure(): void\n{\nMyModelFactory::new()-&gt;create();\n$response = $this-&gt;createResource(MyModelCollection::class, MyModel::simplePaginate());\n$response-&gt;assertJsonStructureExact([\n'data',\n'links',\n'meta',\n]);\n$this-&gt;assertEquals(MyModelResource::class, MyModelCollection::make([])-&gt;collects);\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#it_returns_the_right_structure-resource","title":"it_returns_the_right_structure | Resource","text":"<pre><code>&lt;?php\n/** @test */\npublic function it_returns_the_right_structure(): void\n{\n$response = $this-&gt;createResource(\nMyModelResource::class,\nMyModelFactory::new()-&gt;create()\n);\n$response-&gt;assertJsonStructureExact([\n'id',\n'my_column_one',\n'my_column_two',\n'created_at',\n'updated_at',\n]);\n$response-&gt;assertJson(\nfn (AssertableJson $json) =&gt; $json\n-&gt;whereAllType([\n'id' =&gt; ['integer'],\n'my_column_one' =&gt; ['string'],\n'my_column_two' =&gt; [null, 'string'],\n'created_at' =&gt; ['string'],\n'updated_at' =&gt; ['string'],\n])\n-&gt;etc()\n);\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#examples_for_mock_actions","title":"examples_for_mock_actions","text":"<pre><code>&lt;?php\n/** @test */\npublic function examples_for_mock_actions(): void\n{\n$myAction = $this-&gt;spy(MyActionn::class);\n$myAction-&gt;shouldReceive('execute')\n-&gt;once()\n-&gt;withArgs(fn ($arg) =&gt; $arg === 'foo')\n-&gt;andReturn('bar');\n// or\n$spy = $this-&gt;spy(MyActionn::class);\n$spy-&gt;shouldReceive('execute')\n-&gt;once()\n-&gt;with(MyExampleModel::class, MyExampleData::class)\n-&gt;andReturn('bar');\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#eventfake","title":"Event::fake","text":"","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#event-assertdispatched","title":"Event:: assertDispatched","text":"<pre><code>&lt;?php\n/** @test */\npublic function event_assert_dispatched(): void\n{\nEvent::fake();\n// or\nEvent::fake([\nExampleCreated::class,\n]);\n$myExample = MyExampleFactory::new()-&gt;create();\n// Assert a event was dispatched...\nEvent::assertDispatched(ExampleCreated::class);\n// Assert a event was dispatched...\nEvent::assertDispatched(ExampleCreated::class, function ($event) use ($myExample) {\nreturn $event-&gt;myExample-&gt;is($myExample);\n});\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#event-assertnotdispatched","title":"Event:: assertNotDispatched","text":"<pre><code>&lt;?php\n/** @test */\npublic function event_assert_not_dispatched(): void\n{\nEvent::fake();\n// or\nEvent::fake([\nExampleCreated::class,\n]);\n$myExample = MyExampleFactory::new()-&gt;create();\n// Assert a event was not dispatched...\nEvent::assertNotDispatched(ExampleCreated::class);\nEvent::assertNotDispatched(ExampleCreated::class, function ($event, $payload) {\nreturn $payload[0]-&gt;name === 'John Doe';\n});\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#event-assertdispatchedtimes","title":"Event:: assertDispatchedTimes","text":"<pre><code>&lt;?php\n/** @test */\npublic function event_assert_dispatched_times(): void\n{\nEvent::fake();\n// or\nEvent::fake([\nExampleCreated::class,\n]);\n$myExample = MyExampleFactory::new()-&gt;create();\n// Assert a event was dispatched exactly n times...\nEvent::assertDispatchedTimes(ExampleCreated::class, 1);\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#event-assertlistening","title":"Event:: assertListening","text":"<pre><code>&lt;?php\n/** @test */\npublic function event_assert_listening(): void\n{\nEvent::fake();\n// or\nEvent::fake([\nExampleCreated::class,\n]);\n$myExample = MyExampleFactory::new()-&gt;create();\n// assert that a listener is listening to a given event\nEvent::assertListening(ExampleCreated::class, ExampleListener::class);\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#queuefake","title":"Queue::fake","text":"","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#queue-assertpushed","title":"Queue:: assertPushed","text":"<pre><code>&lt;?php\n/** @test */\npublic function examples_for_queue_fakes(): void\n{\nQueue::fake();\n// or\nQueue::fake([\nExampleJob::class,\n]);\n// queue a job\nExampleJob::dispatch();\n// assert that a job was pushed...\nQueue::assertPushed(ExampleJob::class);\n// assert that a job was pushed a given number of times...\nQueue::assertPushed(ExampleJob::class, 1);\n// assert that a job was pushed with a given payload...\nQueue::assertPushed(ExampleJob::class, function ($job) {\nreturn $job-&gt;example == 'example';\n});\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#queue-assertnotpushed","title":"Queue:: assertNotPushed","text":"<pre><code>&lt;?php\n/** @test */\npublic function queue_assert_not_pushed(): void\n{\nQueue::fake();\n// or\nQueue::fake([\nExampleJob::class,\n]);\n// queue a job\nExampleJob::dispatch();\n// assert that a job was not pushed\nQueue::assertNotPushed(ExampleJob::class);\n// asser that a job was not pushed with a given payload...\nQueue::assertNotPushed(ExampleJob::class, function (ExampleJob $job) {\nreturn $job-&gt;exampleProperty === 'exampleValue';\n});\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#queue-assertnothingpushed","title":"Queue:: assertNothingPushed","text":"<pre><code>&lt;?php\n/** @test */\npublic function queue_assert_nothing_pushed(): void\n{\nQueue::fake();\n// or\nQueue::fake([\nExampleJob::class,\n]);\n// queue a job\nExampleJob::dispatch();\n// assert that no jobs were pushed...\nQueue::assertNothingPushed();\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#queue-assertpushedon","title":"Queue:: assertPushedOn","text":"<pre><code>&lt;?php\n/** @test */\npublic function queue_assert_pushed_on(): void\n{\nQueue::fake();\n// or\nQueue::fake([\nExampleJob::class,\n]);\n// queue a job\nExampleJob::dispatch();\n// assert that a job was pushed on a given queue...\nQueue::assertPushedOn('queue-name', ExampleJob::class);\n// assert that a job was pushed a given number of times on a given queue...\nQueue::assertPushedOn('queue-name', ExampleJob::class, 1);\n// assert that a job was pushed with a given payload on a given queue...\nQueue::assertPushedOn('queue-name', ExampleJob::class, function ($job) {\nreturn $job-&gt;example == 'example';\n});\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#queue-assertpushedwithchain","title":"Queue:: assertPushedWithChain","text":"<pre><code>&lt;?php\n/** @test */\npublic function queue_assert_pushed_with_chain(): void\n{\nQueue::fake();\n// or\nQueue::fake([\nExampleJob::class,\n]);\n// queue a job\nExampleJob::dispatch();\n// assert that a job was pushed with a given chain...\nQueue::assertPushedWithChain(ExampleJob::class, [\nnew AnotherJob,\nnew YetAnotherJob,\n]);\n// assert that a job was pushed with a given chain...\nQueue::assertPushedWithChain(ExampleJob::class, [\nnew AnotherJob,\nnew YetAnotherJob,\n], function ($job) {\nreturn $job-&gt;user-&gt;id === 1;\n});\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/tests/#queue-assertpushedwithoutchain","title":"Queue:: assertPushedWithoutChain","text":"<pre><code>&lt;?php\n/** @test */\npublic function queue_assert_pushed_without_chain(): void\n{\nQueue::fake();\n// or\nQueue::fake([\nExampleJob::class,\n]);\n// queue a job\nExampleJob::dispatch();\n// assert that a job was pushed without a given chain...\nQueue::assertPushedWithoutChain(ExampleJob::class);\n// assert that a job was pushed without a given chain and with a given payload...\nQueue::assertPushedWithoutChain(ExampleJob::class, function ($job) {\nreturn $job-&gt;exampleProperty === 'exampleValue';\n});\n}\n</code></pre>","tags":["laravel","tests","exception","event","mock","spy","expectException","expectExceptionMessage","assertDispatched","assertNotDispatched","assertDispatchedTimes","assertNotDispatchedTimes","once()"]},{"location":"laravel/validation/","title":"Validation","text":"","tags":["laravel","validation","request","passed","passedValidation","prepareForValidation","unique","rule"]},{"location":"laravel/validation/#prepareforvalidation","title":"prepareForValidation","text":"<pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\nuse Smake\\Common\\Http\\Requests\\Request;\nclass EditUserRequest extends Request\n{\nprotected function prepareForValidation()\n{\nparent::prepareForValidation();\n$this-&gt;merge([\n'nickname' =&gt; $this-&gt;input('nickname', '') . ' with Love',\n]);\n}\n}\n</code></pre>","tags":["laravel","validation","request","passed","passedValidation","prepareForValidation","unique","rule"]},{"location":"laravel/validation/#ruleunique-with-ignore-method-on-update","title":"Rule::unique with ignore method on update","text":"<p>Adding a record:</p> <pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\nuse Smake\\Common\\Http\\Requests\\Request;\nclass AddUserRequest extends Request\n{\npublic function rules()\n{\nreturn [\n'email' =&gt; [\n'required',\n'email:strict',\n'max:255',\nRule::unique('users', 'email'),\n],\n];\n}\n}\n</code></pre> <p>Update an existing record:</p> <pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\nuse Smake\\Common\\Http\\Requests\\Request;\nclass EditUserRequest extends Request\n{\npublic function rules()\n{\nreturn [\n'email' =&gt; [\n'required',\n'email:strict',\n'max:255',\nRule::unique('users', 'email')-&gt;ignore($this-&gt;route('userId')),\n],\n];\n}\n}\n</code></pre>","tags":["laravel","validation","request","passed","passedValidation","prepareForValidation","unique","rule"]},{"location":"laravel/validation/#passedvalidation","title":"passedValidation","text":"<pre><code>&lt;?php\nuse Illuminate\\Validation\\Rule;\nuse Smake\\Common\\Http\\Requests\\Request;\nclass EditUserRequest extends Request\n{\nprotected function passedValidation()\n{\n$this-&gt;merge([\n'nickname' =&gt; $this-&gt;input('nickname', '') . '\u2764\ufe0f',\n]);\n$this-&gt;getValidatorInstance()-&gt;setData(\ncollect($this-&gt;input())\n-&gt;only(collect($this-&gt;rules()]-&gt;keys())\n-&gt;all()\n);\n}\n}\n</code></pre>","tags":["laravel","validation","request","passed","passedValidation","prepareForValidation","unique","rule"]},{"location":"mkdocs/commands/","title":"Kommandos","text":"","tags":["mkdocs","commands"]},{"location":"mkdocs/commands/#mkdocs-help","title":"mkdocs help","text":"<pre><code>mkdocs --help\n</code></pre>","tags":["mkdocs","commands"]},{"location":"mkdocs/commands/#mkdocs-new","title":"mkdocs new","text":"<pre><code>mkdocs new\n</code></pre>","tags":["mkdocs","commands"]},{"location":"mkdocs/commands/#mkdocs-build","title":"mkdocs build","text":"<pre><code>mkdocs build\n</code></pre>","tags":["mkdocs","commands"]},{"location":"mkdocs/commands/#mkdocs-serve","title":"mkdocs serve","text":"<pre><code>mkdocs serve\n</code></pre>","tags":["mkdocs","commands"]},{"location":"mkdocs/commands/#mkdocs-serve-livereload","title":"mkdocs serve --livereload","text":"<pre><code>mkdocs serve --livereload\n</code></pre>","tags":["mkdocs","commands"]},{"location":"mkdocs/install/","title":"Install python3","text":"<p>Weitere Information siehe python3.de</p>","tags":["mkdocs","installation"]},{"location":"mkdocs/install/#install-mkdocs","title":"Install mkdocs","text":"<pre><code>pip3 install mkdocs\n</code></pre>","tags":["mkdocs","installation"]},{"location":"mkdocs/pip/","title":"Pip Kommandos","text":"","tags":["mkdocs","pip"]},{"location":"mkdocs/pip/#pip3","title":"pip3","text":"<pre><code>pip3 --version\n</code></pre>","tags":["mkdocs","pip"]},{"location":"mkdocs/plugins/","title":"Plugins","text":"","tags":["mkdocs","plugins"]},{"location":"mkdocs/plugins/#mkdocs-glightbox","title":"mkdocs-glightbox","text":"<pre><code>pip3 install mkdocs-glightbox\n</code></pre>","tags":["mkdocs","plugins"]},{"location":"mkdocs/plugins/#mkdocs-minify-plugin","title":"mkdocs-minify-plugin","text":"<pre><code>pip3 install mkdocs-minify-plugin\n</code></pre>","tags":["mkdocs","plugins"]},{"location":"mkdocs/plugins/#mkdocs-static-i18n","title":"mkdocs-static-i18n","text":"<pre><code>pip3 install mkdocs-static-i18n\npip3 install mkdocs-static-i18n --use-pep517\n</code></pre>","tags":["mkdocs","plugins"]},{"location":"mkdocs/plugins/#mkdocs-admonition","title":"mkdocs-admonition","text":"<pre><code>pip3 install mkdocs-admonition\n</code></pre>","tags":["mkdocs","plugins"]},{"location":"mkdocs/plugins/#mkdocs-pdf-export-plugin","title":"mkdocs-pdf-export-plugin","text":"<pre><code>pip3 install mkdocs-pdf-export-plugin\n</code></pre>","tags":["mkdocs","plugins"]},{"location":"mkdocs/python3/","title":"Install python3","text":"<pre><code>python3 -m ensurepip --upgrade\n</code></pre>","tags":["python","installation"]},{"location":"mkdocs/python3/#python3-version","title":"python3 --version","text":"<pre><code>python3 --version\n</code></pre>","tags":["python","installation"]},{"location":"mkdocs/templates/","title":"Templates","text":"<pre><code>pip3 install mkdocs-material\n</code></pre>","tags":["mkdocs","temaplates"]}]}